数组：
	可以存储一组或者一系列数据的容器,引用数据类型

声明数组：
	隐形声明方式：
		var aa=[];
	以对象形式声明：
		var cc=new Array();




赋值：
	1.直接赋值：
		var aa=[11,2,58,566,45,36,7];
	2.通过下标值来赋值(先声明后赋值)：
		var bb=[];
		    bb[0]=4;
		    bb[1]=7;
		    bb[2]=8;
	3.以对象形式声明并直接赋值：
		var cc=new Array(1,2,3,4);
	4.以对象形式声明后再赋值
		var cc=new Array();
		    cc[0]=1;
		    cc[1]=2;
		    cc[2]=3;
	5.如果以对象形式声明并传入一个参数，此参数为数值型的时候，
	得到的结果为此数组的长度值
	6.数组可以存储任何数据

访问数组：
	1.通过数组下标值来访问数组中具体的某个值
	2.数组下标值从0开始，最大下标值为length-1
	3.数组的length长度，也代表数组的值有多少个

遍历数组：
	for循坏
	while循坏
	for in 循坏：1.用来遍历数组
		     2.用来遍历对象的属性


1.myArr.push();
	向数组末尾添加一个或多个数据，返回新数组长度


2.myArr.unshift();
	向数组开头添加一个或多个数据，返回新数组的长度

3.myArr.pop();
	删除数组的末尾的数据，只删除一个值，返回被删除的数

4.myArr.shift();
	删除数组开头的数据，只删除一个值， 返回被删除的数

5.万能的添加与删除
	myArr.splice(index1,num,num1,num2...);
	1.index 指数组添加或删除开始得位置
	2.num   指数组或者删除的数量
	3.num1,num2...替换的值
数组的转换：
	1.myStr.split（""）；
	将字符串转换成数组
	2.myArr.join(["分隔符"])
	将数组按照特定的分隔符进行转换，变成字符串
数组的分割
	1.myArr.slice(index1,index2);
	从截取指定的开始位置到结束位置（不包括）
	的元素，如果不指定结束位置，
	则从开始位置截取到结束为位置，
	数组的下标值支持附属，从-1开头，返回新数组

数组连接
	1.myArr.concat();
	将两个或者更多的数组连接在一起，
	返回新的数组，原数组不变
数组排序：
	1.myArr.sort();
	sort方法中的参数为一个回调函数，
	决定数组由大到小排序或者由小到大排序




