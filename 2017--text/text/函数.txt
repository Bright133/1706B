function   
	1.将完成某一特定功能的代码块集合起来，可以重复使用的代码块.



声明函数：1.函数名声明
		function aa(){};
	 2.字面量形式声明 (匿名函数)
		var bb=function(){}
	 3.以对象的形式声明函数
		var fn=new Function(alert(2));
		new   实例化（工厂生产实物的过程）

调用函数：1.括号调用
	   函数名()  变量名（）
	 2.事件触发是调用函数
	   对象.onclick=function(){}
	 3.自调用
	  （function（）{}）（）

函数声明注意事项：

		1.当声明的函数，函数名相同时，
		后面的函数覆盖掉前面的函数，执行后面的函数
		2.当以字面量形式 声明的函数，必须在函数后面去调用，不可以在函数前面调用；
		3.不同的script块之间的解析是分块解析，先解析前面的块，再解析后面 的块，后面块可以访问
		前面块中的内容，
		前面的不可以访问后面的块中的内容


预解析：
	1.在代码执行前，计算机将当前作用域（
	代码执行的范围）
	中的所有声明过程拿到当前作用域的最顶层，所以在此变量赋值以前调用时得到 的结果为undefined，
	所以字面量形式的声明是不可以在变量赋值前调用

参数作用：
		可以动态的改变函数体内对应的变量的值，
		使同一函数得到不同的结果
		1.形参：在定义函数的时候，函数括号内定义的变量，叫做形参，
		用来接收实参的
		2.实参：调用函数的时候，在括号内传入的值叫做实参，用来传递给形参，从而得到函数不同的结果

		实参与形参一一对应

		实参个数与形参个数：
		1.实参>形参   多余的实参通过arguments对象访问
		2.实参<形参   多余的形参自动赋值undefined
		

		arguments对象在函数创建的时候，
		都会隐式的创建一个arguments对象
		它包含实际穿入参数的信息
			1.---length获取所有实参的个数
			2.访问具体的某个实参的时候，
			可以通过arguments[下标]来访问
			下标从0开始











