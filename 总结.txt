微信小程序：
	小程序是一种新的开放能力，开发者可以快速地开发一个小程序。小程序可以在微信内被便捷	地获取和传播，同时具有出色的使用体验。

微信小程序特点：
	① 微信小程序实现了应用“触手可及”的梦想，用户扫一扫或者搜一下即可打开应用。
	② 微信小程序也体现了“用完即走”的理念，用户不用关心是否安装太多应用的问题。
	③ 微信小程序让应用无处不在，随时可用，但又无需安装卸载。
	④ 微信小程序对手机的配置要求不高，什么应用都可以用
	⑤ 微信小程序开发成本低、更快速的迭代

结构：
	app.js：页面逻辑
	app.json：配置
	app.wxss：样式
	app.wxml：结构

分为两块 ：视图层 （view） 逻辑层(App serice)

app.json配置
	1 pages字段 ―― 用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前你的小	  	  程序页面定义在哪个目录。
	2 window字段 ―― 小程序所有页面的顶部背景颜色，文字颜色定义在这里的。
	3 tabbar：可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页面
	  list属性接收一个数组

生命周期：
	onLaunch	函数   生命周期函数--监听小程序初始化
	onShow	        函数   生命周期函数--监听小程序显示
	onHide	        函数   生命周期函数--监听小程序隐藏
	onError	        函数   错误监听函数
	nPageNotFound	函数   页面不存在监听函数
	onLoad	        函数   生命周期函数--监听页面加载


（3）微信小程序的目录结构及配置：
	app.json---
	app.js---
	app.wxss
	page目录：
	index.wxml---页面结构（视图层）样式也属于view。
	index.js---页面行为（逻辑层）
	index.wxss
	index.json

（4）Page.prototype.setData()===》构造函数的原型对象的setData方法。
setData 函数用于将数据从逻辑层发送到视图层（异步），
同时改变对应的 this.data 的值（同步）。

注意：object 以 key，value 的形式表示将 this.data 中的 key 对应的值改变成 
value。callback 是一个回调函数，在这次setData对界面渲染完毕后调用。
params:
	data	Object	是	这次要改变的数据	
	callback	Function	否	回调函数	1.5.0
*直接修改 this.data 而不调用 this.setData 是无法改变页面的状态的，
还会造成数据不一致。
*单次设置的数据不能超过1024kB，请尽量避免一次设置过多的数据。
*请不要把 data 中任何一项的 value 设为 undefined ，否则这一项将不被设置
并可能遗留一些潜在问题。

（5）列表渲染、条件渲染
for_key链接：https://blog.csdn.net/It_BeeCoder/article/details/75269639
WXML（WeiXin Markup Language）是框架设计的一套标签语言，
结合基础组件、事件系统，可以构建出页面的结构。

（6）event事件对象：
     事件绑定的写法同组件的属性，以 key、value 的形式------
     key 以bind或catch开头，然后跟上事件的类型，如bindtap、catchtouchstart。
     bind事件绑定 不会 阻止冒泡事件向上冒泡，catch事件绑定可以阻止冒泡事件向上冒泡。
     event属性
	type	String	事件类型
	timeStamp	Integer	事件生成时的时间戳
	touches	Array	[{手指触摸点的信息},{}]，当前停留在屏幕中的 触摸点信息 的数组

（7）rpx：响应式的像素。换算如：iPhone6 1rpx = 0.5px  1px = 2rpx
	公共、全局样式common.wxss 置顶，@import "相对路径";

（8）.wxs文件：是Weixin Script脚本的简称。
	1、WXS 代码可以编写在 wxml 文件中的 <wxs> 标签内，或以 .wxs 为后缀名的文件内。
	2、每一个 .wxs 文件和 <wxs> 标签都是一个单独的模块。
	每个模块都有自己独立的作用域。即在一个模块里面定义的变量与函数，默认为私有的，
	对其他模块不可见。
	3、一个模块要想对外暴露其内部的私有变量与函数，只能通过 module.exports 实现。



how：
	（1）在pages目录下，直接创建 .wxs 文件，在其中直接编写 WXS 脚本。
	（*2）.wxs 文件可以被其他的 .wxs 文件 或 WXML 中的 <wxs> 标签引用，
    也可以在界面中使用<wxs></wxs>标签。
	（3）每个 wxs 模块均有一个内置的 module 对象。
	（4）模块对象的exports: 通过该属性，可以对外共享本模块的私有变量与函数。

	~~~~~~在.wxs模块中引用其他 wxs 文件模块，可以使用 require 函数。

	在界面中使用单闭合标签：<wxs src="相对路径" module="模块名" />

	***<wxs>标签的src 属性可以用来引用其他的 wxs 文件模块，以下是注意事项：
	（1）只能引用 .wxs 文件模块，且必须使用相对路径。
	（2）wxs 模块均为单例，wxs 模块在第一次被引用时，会自动初始化为单例对象。
    		多个页面，多个地方，多次引用，使用的都是同一个 wxs 模块对象。
	（3）如果一个 wxs 模块在定义之后， "一直没有被引用" ，则该模块不会被解析与运行。
    		想要解析该模块，则需要一个运行环境 ==》小程序的界面
